README: FlexAlloc Dynamic Memory Allocator

### UNDER DEVELOPMENT (STAY TUNED) ...

### Project Background:
A custom memory allocator was developed to improve the memory management efficiency of internal enterprise applications.
The project aims to optimize program performance through underlying memory management techniques.

### Expected Functions:
(1) Implement thread local storage to reduce memory allocation contention
(2) Efficiently manage the free list with block size based separated free list strategy
(3) Implement memory fragmentation reduction strategy
(4) Memory usage statistics function development
(5) Support concurrent allocation and release safety mechanism.

### Expected Goal
1. the optimized memory allocator shows efficient resource management capabilities
in memory constrained environments, reducing overall system resource consumption.
2. This project demonstrates the potential for efficient memory management with
limited resources while maintaining code simplicity and maintainability.

### Project Architect

FlexAlloc
├── ThreadLocalStorage
│   └── Implementation of thread-local storage to reduce memory allocation contention
│
├── FreeListManagement
│   └── Implementation of segregated free list strategy based on block sizes
│
├── FragmentationReduction
│   └── Strategies and algorithms to reduce memory fragmentation
│
├── MemoryUsageStatistics
│   └── Development of features for tracking and reporting memory usage
│
└── ConcurrencySupport
    └── Safe mechanisms for concurrent allocation and deallocation
